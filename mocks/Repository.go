// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	core "demo/core"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetAllCollezioniREPO provides a mock function with given fields:
func (_m *Repository) GetAllCollezioniREPO() []core.Collection {
	ret := _m.Called()

	var r0 []core.Collection
	if rf, ok := ret.Get(0).(func() []core.Collection); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.Collection)
		}
	}

	return r0
}

// GetArticoliCollezioneREPO provides a mock function with given fields: _a0
func (_m *Repository) GetArticoliCollezioneREPO(_a0 int) []core.Item {
	ret := _m.Called(_a0)

	var r0 []core.Item
	if rf, ok := ret.Get(0).(func(int) []core.Item); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.Item)
		}
	}

	return r0
}

// GetArticoliREPO provides a mock function with given fields:
func (_m *Repository) GetArticoliREPO() []core.Item {
	ret := _m.Called()

	var r0 []core.Item
	if rf, ok := ret.Get(0).(func() []core.Item); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.Item)
		}
	}

	return r0
}

// GetArticoloREPO provides a mock function with given fields: _a0
func (_m *Repository) GetArticoloREPO(_a0 int) core.Item {
	ret := _m.Called(_a0)

	var r0 core.Item
	if rf, ok := ret.Get(0).(func(int) core.Item); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(core.Item)
	}

	return r0
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepository(t mockConstructorTestingTNewRepository) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
